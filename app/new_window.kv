WindowManager:
    MainWindow:
    Optimize:
    ScheduleOptions:
    AboutOrganizer:
    SeeSchedule:
    ClientFileChooser:
    InstructorFileChooser:
    ScheduleParameters:
    GoalFunction:
    SeeAlgorithmParameters:


<MainWindow>:
    name: 'menu'

    BoxLayout:

        orientation: 'horizontal'
        #size: root.width, root.height
        cols: 2

        BoxLayout:
            orientation: 'vertical'
            Image:
                source: 'images/schedule-icon.png'
            Label:
                text: 'Schedule Organizer'


                font_name: 'fonts/Lcd.ttf'
                font_size: '40dp'
                color: '#80ffdb'


        BoxLayout:
            orientation: 'vertical'

            Button:
                text: 'Optimize'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/12
                color: '#80ffdb'
                on_release:
                    app.root.current = 'optimize'
                    root.manager.transition.direction = 'left'

            Button:
                text: 'Schedule Options'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/12
                color: '#80ffdb'
                on_release:
                    app.root.current = 'schedule options'
                    root.manager.transition.direction = 'left'


            Button:
                text: 'See Schedule'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/12
                color: '#80ffdb'
                on_release:
                    root.manager.get_screen('optimize').generate_initial_solution()
                    root.manager.get_screen('see_schedule').generate_see_schedule_layout()
                    root.manager.get_screen('see_schedule').update_schedule_description()
                    app.root.current = 'see_schedule'
                    root.manager.transition.direction = 'left'


            Button:
                text: 'Goal Function'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/12
                color: '#80ffdb'
                on_release:
                    root.manager.get_screen('goal_function').draw_plot()
                    app.root.current = 'goal_function'
                    root.manager.transition.direction = 'left'

            Button:
                text: 'See Algorithm Parameters'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/12
                color: '#80ffdb'
                on_release:
                    app.root.current = 'see_algorithm_parameters'
                    root.manager.transition.direction = 'left'

            Button:
                text: 'About Organizer'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/12
                color: '#80ffdb'
                on_release:
                    app.root.current = 'about_organizer'
                    root.manager.transition.direction = 'left'

            Button:
                id: btnExit
                text: 'Exit'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/8
                color: '#80ffdb'
                on_release: app.stop()


<Optimize>:
    name: 'optimize'
    GridLayout:
        cols: 1


        GridLayout:
            padding: 20
            cols: 1
            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 10

                ToggleButton:
                    text: 'Penalty method'
                    font_size: self.width / 8
                    size_hint: 0.2, 0.8
                    halign: 'center'
                    valign: 'middle'
                    on_state: root.toggle_penalty_method(self)

                BoxLayout:
                    id: 'alpha'
                    orientation: "horizontal"
                    size_hint: 0.8, 1
                    spacing: 30

                    Label:
                        size_hint: 0.1, 1
                        pos_hint: {"x": 0, "center_y":0.5}
                        text: 'Alpha:'
                        font_size: self.width / 4
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    TextInput:
                        id: input_alpha
                        size_hint: 0.05, 0.35
                        pos_hint: {"x": 0.2, "center_y":0.5}
                        # text: str(format(root.parameters['alpha'], '.3f')) ciekawe czemu tak się nie aktualizuje
                        text: str(format(slider_alpha.value, '.4f'))
                        text_size: self.size
                        font_size: self.width / 4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='alpha', input_parameter=root.ids.input_alpha.text)
                            root.ids.slider_alpha.value = float(self.text)
                            # root.ids.slider_alpha.value = root.parameters['alpha'] tutaj też dziwne rzeczy się dzieją

                    Slider:
                        id: slider_alpha
                        size_hint: 0.3, 1
                        #pos_hint: {"x": 0.4, "center_y":0.5}
                        min: 0.001
                        max: 0.999
                        step: 0.001
                        orientation: 'horizontal'
                        halign: "right"
                        value: root.parameters['alpha']
                        on_value:
                            root.parameters['alpha'] = self.value


            GridLayout:
                size_hint: 1, 0.6
                padding: 20
                spacing: 20
                rows: 2

                BoxLayout:
                    orientation: "horizontal"
                    size_hint: 1, 0.2
                    spacing: 10

                    Label:
                        # size_hint: 0.5, 1
                        # pos_hint: {"x": 1, "y": 0.5}
                        text: 'Penalty for repeated:'
                        font_size: self.width/8
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'


                    TextInput:
                        id: input_penalty_for_repeated
                        size_hint: 0.5, 0.35
                        pos_hint: {"center_y": 0.5}
                        text: str(format(root.parameters['penalty_for_repeated'], '.0f'))
                        text_size: self.size
                        font_size: self.width/4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='penalty_for_repeated', input_parameter=root.ids.input_initial_temp.text)

                BoxLayout:
                    orientation: "horizontal"
                    size_hint: 1, 0.2
                    spacing: 10

                    Label:
                        # size_hint: 0.5, 1
                        # pos_hint: {"x": 1, "y": 0.5}
                        text: 'Penalty for unmatched:'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'


                    TextInput:
                        id: input_penalty_for_unmatched
                        size_hint: 0.5, 0.35
                        pos_hint: {"center_y": 0.5}
                        text: str(format(root.parameters['penalty_for_unmatched'], '.0f'))
                        text_size: self.size
                        font_size: self.width/4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='penalty_for_unmatched', input_parameter=root.ids.input_initial_temp.text)

                BoxLayout:
                    orientation: "horizontal"
                    size_hint: 1, 0.2
                    spacing: 10

                    Label:
                        # size_hint: 0.5, 1
                        # pos_hint: {"x": 1, "y": 0.5}
                        text: 'Initial temp:'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'


                    TextInput:
                        id: input_initial_temp
                        size_hint: 0.5, 0.35
                        pos_hint: {"center_y": 0.5}
                        text: str(format(root.parameters['initial_temp'], '.0f'))
                        text_size: self.size
                        font_size: self.width/4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='initial_temp', input_parameter=root.ids.input_initial_temp.text)

                BoxLayout:
                    orientation: "horizontal"
                    size_hint: 1, 0.2
                    spacing: 10

                    Label:
                        # size_hint: 0.5, 1
                        # pos_hint: {"x": 0, "center_y":0.5}
                        text: 'No. of iterations in one temp.:'
                        font_size: self.width/8
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    TextInput:
                        id: input_n_iter_one_temp
                        size_hint: 0.5, 0.35
                        pos_hint: {"center_y": 0.5}
                        text: str(root.parameters['n_iter_one_temp'])
                        text_size: self.size
                        font_size: self.width/4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='n_iter_one_temp', input_parameter=root.ids.input_n_iter_one_temp.text)


                BoxLayout:
                    orientation: "horizontal"
                    size_hint: 1, 0.2
                    spacing: 10

                    Label:
                        # size_hint: 0.5, 1
                        # pos_hint: {"x": 0, "center_y":0.5}
                        text: 'Epsilon:'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    TextInput:
                        id: input_epsilon
                        size_hint: 0.5, 0.35
                        pos_hint: {"center_y": 0.5}
                        text: str(format(root.parameters['epsilon'], 'g'))
                        text_size: self.size
                        font_size: self.width/4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='epsilon', input_parameter=root.ids.input_epsilon.text)

                BoxLayout:
                    orientation: "horizontal"
                    size_hint: 1, 0.2
                    spacing: 10

                    Label:
                        # size_hint: 0.5, 1
                        # pos_hint: {"x": 0, "center_y":0.5}
                        text: 'Minimal temp:'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    TextInput:
                        id: input_min_temp
                        size_hint: 0.5, 0.35
                        pos_hint: {"center_y": 0.5}
                        text: str(root.parameters['min_temp'])
                        text_size: self.size
                        font_size: self.width/4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='min_temp', input_parameter=root.ids.input_min_temp.text)

                BoxLayout:
                    orientation: "horizontal"
                    size_hint: 1, 0.2
                    spacing: 10

                    Label:
                        # size_hint: 0.5, 1
                        # pos_hint: {"x": 0, "center_y":0.5}
                        text: 'No. of iterations without improvement:'
                        font_size: self.width/8
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    TextInput:
                        id: input_n_iter_without_improvement
                        size_hint: 0.5, 0.35
                        pos_hint: {"center_y": 0.5}
                        text: str(format(root.parameters['n_iter_without_improvement'], '.0f'))
                        text_size: self.size
                        font_size: self.width/4
                        halign: "center"
                        multiline: False
                        on_text:
                            root.on_text(parameter='n_iter_without_improvement', input_parameter=root.ids.input_n_iter_without_improvement.text)

                BoxLayout:
                    orientation: "vertical"
                    size_hint: 1, 0.2
                    spacing: 10

                    BoxLayout:
                        orientation: "horizontal"
                        size_hint: 1, 0.2
                        spacing: 10

                        Label:
                            # size_hint: 0.5, 1
                            # pos_hint: {"x": 0, "center_y":0.5}
                            text: 'Squeeze initial solution:'
                            font_size: self.width/7
                            text_size: self.size
                            halign: 'right'
                            valign: 'middle'

                        CheckBox:
                            on_active: root.checkbox_greedy(self, self.active)

                    BoxLayout:
                        orientation: "horizontal"
                        size_hint: 1, 0.2
                        spacing: 10

                        Label:
                            # size_hint: 0.5, 1
                            # pos_hint: {"x": 0, "center_y":0.5}
                            text: 'Improve results:'
                            font_size: self.width/7
                            text_size: self.size
                            halign: 'right'
                            valign: 'middle'

                        CheckBox:
                            active: True
                            on_active: root.checkbox_improve_results(self, self.active)



            BoxLayout:
                id: neighborhood
                orientation: 'horizontal'
                size_hint: 1, 0.2
                Label:
                    size_hint: 0.3, 1
                    font_size: self.width/16
                    text: 'Method of choosing neighborhood:'


                BoxLayout:
                    size_hint: 0.7, 1
                    orientation: 'horizontal'

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 20
                        Label:
                            font_size: self.width/8
                            text: 'Move one'
                        CheckBox:
                            active: True
                            on_active: root.checkbox_click(self, self.active, 'move_one')

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 20
                        Label:
                            font_size: self.width/8
                            text: 'Move two'
                        CheckBox:
                            on_active: root.checkbox_click(self, self.active, 'move_two')

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 30
                        Label:
                            font_size: self.width/8
                            text: 'Move to \nmost busy'
                        CheckBox:
                            on_active: root.checkbox_click(self, self.active, 'move_to_most_busy')

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 30
                        Label:
                            font_size: self.width/8
                            text: 'Swap with \nmost busy'
                        CheckBox:
                            on_active: root.checkbox_click(self, self.active, 'swap_with_most_busy')

                    BoxLayout:
                        orientation: 'vertical'
                        spacing: 30
                        Label:
                            font_size: self.width/8
                            text: 'Change instructor'

                        CheckBox:
                            id: change_instructor_box
                            on_active: root.checkbox_click(self, self.active, 'change_instructor')

        BoxLayout:
            orientation: 'horizontal'
            size_hint: (1, 0.1)

            Button:
                text: 'Main Menu'
                text_size: self.size
                font_name: 'fonts/Lcd.ttf'
                font_size: '30dp'
                color: '#80ffdb'
                halign: 'center'
                valign: 'middle'
                on_release:
                    app.root.current = 'menu'
                    root.manager.transition.direction = 'right'

            Button:
                text: 'See Schedule'
                text_size: self.size
                font_name: 'fonts/Lcd.ttf'
                font_size: '30dp'
                color: '#80ffdb'
                halign: 'center'
                valign: 'middle'
                on_release:
                    root.manager.get_screen('optimize').generate_initial_solution()
                    root.manager.get_screen('see_schedule').generate_see_schedule_layout()
                    root.manager.get_screen('see_schedule').update_schedule_description()
                    app.root.current = 'see_schedule'
                    root.manager.transition.direction = 'right'

            Button:
                text: 'See Goal Function'
                text_size: self.size
                font_name: 'fonts/Lcd.ttf'
                font_size: '30dp'
                color: '#80ffdb'
                halign: 'center'
                valign: 'middle'
                on_release:
                    root.manager.get_screen('goal_function').draw_plot()
                    app.root.current = 'goal_function'
                    root.manager.transition.direction = 'right'

            Button:
                text: 'Start Optimization'
                text_size: self.size
                font_name: 'fonts/Lcd.ttf'
                font_size: '30dp'
                color: '#ebb61b'
                halign: 'center'
                valign: 'middle'
                on_release:
                    root.start_optimization()
                    root.update_algorithm_parameters()




<ScheduleOptions>:
    name: 'schedule options'
    padding: 50
    BoxLayout:
        orientation: 'vertical'

        BoxLayout:
            orientation: 'vertical'
            valign: 'top'
            size_hint: (1, 0.3)
            Label:
                text_size: self.size
                halign: 'center'
                valign: 'top'
                padding_x: '20dp'
                padding_y: '20dp'

                text: 'Here you can choose files which contain information about clients and instructors'
                color: '#80ffdb'
                font_size: '40dp'
                font_name: 'fonts/Lcd.ttf'

        BoxLayout:

            orientation: 'vertical'
            spacing: 50
            size_hint: (0.8, 0.8)
            pos_hint: {'center_x': 0.5, 'center_y': 1}

            Button:

                text: 'Set schedule parameters'
                font_name: 'fonts/Lcd.ttf'
                font_size: '40dp'
                color: '#80ffdb'


                on_release:
                    app.root.current = 'schedule_parameters'
                    root.manager.transition.direction = 'left'

            Button:


                text: 'Choose client file'
                font_name: 'fonts/Lcd.ttf'
                font_size: '40dp'
                color: '#80ffdb'

                on_release:
                    app.root.current = 'client_chooser'
                    root.manager.transition.direction = 'left'


            Button:

                text: 'Choose instructor file'
                font_name: 'fonts/Lcd.ttf'
                font_size: '40dp'
                color: '#80ffdb'


                on_release:
                    app.root.current = 'instructor_chooser'
                    root.manager.transition.direction = 'left'



            Button:
                text: 'Go Back'
                font_name: 'fonts/Lcd.ttf'
                font_size: '40dp'
                color: '#80ffdb'
                size_hint: (1, 1)
                on_release:
                    root.manager.get_screen('optimize').generate_initial_solution(force=True)
                    app.root.current = 'menu'
                    root.manager.transition.direction = 'right'

        BoxLayout:
            orientation: 'vertical'
            valign: 'top'
            size_hint: (1, 0.1)

<ClientFileChooser>:
    name: 'client_chooser'
    id: client_chooser

    BoxLayout:
        orientation: 'vertical'

        FileChooserIconView:
            id: client_file_chooser
            path: root.get_path()
            on_selection: client_chooser.selected(client_file_chooser.selection)

        Label:
            id: client_path_label
            text: ''
    GridLayout:
        cols: 1
        size_hint: (1, None)
        height: '100dp'
        Button:
            text: 'Go Back'
            font_name: 'fonts/Lcd.ttf'
            font_size: '40dp'
            color: '#80ffdb'
            on_release:
                app.root.current = 'schedule options'
                root.manager.transition.direction = 'right'

<InstructorFileChooser>:
    name: 'instructor_chooser'
    id: instructor_chooser

    BoxLayout:
        orientation: 'vertical'

        FileChooserIconView:
            id: instructor_file_chooser
            path: root.get_path()
            on_selection: instructor_chooser.selected(instructor_file_chooser.selection)

        Label:
            id: instructor_path_label
            text: ''

    GridLayout:
        cols: 1
        size_hint: (1, None)
        height: '100dp'
        Button:
            text: 'Go Back'
            font_name: 'fonts/Lcd.ttf'
            font_size: '40dp'
            color: '#80ffdb'
            on_release:
                app.root.current = 'schedule options'
                root.manager.transition.direction = 'right'


<ScheduleParameters>:
    name: 'schedule_parameters'
    id: schedule_parameters

    GridLayout:
        cols: 1

        Label:
            size_hint: (1, 0.1)
            text: 'Set schedule parameters'
            font_name: 'fonts/Lcd.ttf'
            font_size: '40dp'
            color: '#80ffdb'

        GridLayout:
            size_hint: 1, 0.8
            padding: 20
            spacing: 20
            cols: 2
            rows: 4


            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Number of classrooms:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: class_num
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['class_num'], '.00f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='class_num', input_parameter=root.ids.class_num.text)

            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Days number:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: day_num
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['day_num'], '.00f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='day_num', input_parameter=root.ids.day_num.text)

            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Timeslots number:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: time_slot_num
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['time_slot_num'], '.00f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='time_slot_num', input_parameter=root.ids.time_slot_num.text)

            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Max client:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: max_clients_per_training
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['max_clients_per_training'], '.00f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='max_clients_per_training', input_parameter=root.ids.max_clients_per_training.text)

            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Ticket cost:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: ticket_cost
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['ticket_cost'], '.00f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='ticket_cost', input_parameter=root.ids.ticket_cost.text)

            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Hour pay:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: hour_pay
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['hour_pay'], '.00f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='hour_pay', input_parameter=root.ids.hour_pay.text)

            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Presence pay:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: pay_for_presence
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['pay_for_presence'], '.000f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='pay_for_presence', input_parameter=root.ids.pay_for_presence.text)

            BoxLayout:
                orientation: "horizontal"
                size_hint: 1, 0.2
                spacing: 15

                Label:
                    text: 'Class cost:'
                    font_size: self.width/8
                    text_size: self.size
                    halign: 'right'
                    valign: 'middle'


                TextInput:
                    id: class_renting_cost
                    size_hint: 0.5, 0.5
                    pos_hint: {"center_y": 0.5}
                    text: str(format(root.schedule_parameters['class_renting_cost'], '.00f'))
                    text_size: self.size
                    background_color: (0, 0, 0, 0)
                    cursor_color: (1, 1, 1, 1)
                    disabled_foreground_color: (1, 1, 1, 1)
                    foreground_color: (1, 1, 1, 1)
                    font_size: self.width/4
                    halign: "center"
                    multiline: False
                    on_text:
                        root.on_text(parameter='class_renting_cost', input_parameter=root.ids.class_renting_cost.text)


        BoxLayout:
            orientation: 'horizontal'
            size_hint: (1, 0.15)

            Button:
                text: 'Go Back'
                text_size: self.size
                font_name: 'fonts/Lcd.ttf'
                font_size: '30dp'
                color: '#80ffdb'
                halign: 'center'
                valign: 'middle'
                on_release:
                    app.root.current = 'schedule options'
                    root.manager.transition.direction = 'right'





<AboutOrganizer>:
    name: 'about_organizer'

    GridLayout:
        cols: 1
        BoxLayout:
            orientation: 'horizontal'



            Label:
                text: """\nSchedule Organizer was created to make most optimal schedule which generates the greatest profits for a company which organizes classes of any type.\n\nTo optimize schedule we used Simulated Annealing (SA) algorithm. It generates random schedule and (in many iterations) searches it's neighbourhood and checks if cost function improves.\n\n\nTo optimize your schedule you should do following steps: \n\n1. Load files. To do this you should click Load Files button in main menu and then find 2 files: first which contains information about classes selected by clients and second which contains information about classes which can be taught by instructor.\n\n2. Set parameters. To do this click Optimize button.\n\n3. Start optimization. When you set all parameters click Start Optimization button below. It will optimize schedule and show it to you."""

                text_size: self.size
                halign: 'left'
                valign: 'top'
                padding_x: '20dp'
                padding_y: '10dp'




            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: '\nAfter optimization you will see generated schedule as a matrix of buttons which description contains general information about classes - type of classes, number of attenders etc. You can click at the buttons to check more specific info -list of attenders, instructor name, classroom number.\n\nYou can also move classes if you want. If you do so, program will recalculate cost function.\n\nProgram was written in Python. If you want to see source code you can visit our GitHub repository. To do this, click GitHub icon below.'

                    text_size: self.size
                    halign: 'left'
                    valign: 'top'
                    padding_x: '20dp'
                    padding_y: '10dp'

                Label:
                    size_hint: (1, 0.3)
                    text: 'Created by:\n\n     Kacper Motyka\n     Marek Lechowicz'
                    font_name: 'fonts/Lcd.ttf'
                    color: '#bdb2ff'
                    font_size: '25dp'
                    text_size: self.size
                    halign: 'left'
                    valign: 'top'
                    padding_x: '20dp'

                Button:
                    id: github_button
                    background_normal: 'images/GitHub-Mark-Light-120px-plus.png'
                    background_color: 0,0,0,0
                    pos_hint: {'x': 0.5, 'center_y': 0.8}
                    size_hint: (0.3, 0.3)

                    on_press:
                        root.github_button_on()

                    on_release:
                        root.github_button_off()

                    Image:
                        id: github_button_img
                        source: 'images/GitHub-Mark-Light-120px-plus.png'
                        center_x: self.parent.center_x
                        center_y: self.parent.center_y
        GridLayout:
            cols: 1
            size_hint: (1, None)
            height: '100dp'
            Button:
                text: 'Go Back'
                font_name: 'fonts/Lcd.ttf'
                font_size: '40dp'
                color: '#80ffdb'
                on_release:
                    app.root.current = 'menu'
                    root.manager.transition.direction = 'right'


<SeeSchedule>:
    name: 'see_schedule'
    id: see_schedule
    GridLayout:
        cols: 1
        GridLayout:
            rows: 2
            GridLayout:
                id: top_bar
                cols: 2
                size_hint: 1, 0.14
                Button:
                    id: change_class_button
                    size_hint: 0.14, 1
                    text: 'Displayed classroom id: 0'
                    text_size: self.size
                    font_size: self.width / 6
                    font_name: 'fonts/Lcd.ttf'
                    color: '#80ffdb'
                    halign: 'center'
                    valign: 'center'
                    on_release: root.pick_classroom_popup()


            GridLayout:
                id: bottom_part
                size_hint: 1, 0.86
                cols: 2

        GridLayout:
            cols: 3
            size_hint: (1, 0.1)
            Button:
                text: 'Main menu'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/8
                text_size: self.size
                halign: 'center'
                valign: 'middle'
                color: '#80ffdb'
                on_release:
                    app.root.current = 'menu'
                    root.manager.transition.direction = 'right'

            Button:
                text: 'See Goal Function'
                text_size: self.size
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/8
                text_size: self.size
                color: '#80ffdb'
                halign: 'center'
                valign: 'middle'
                on_release:
                    root.manager.get_screen('goal_function').draw_plot()
                    app.root.current = 'goal_function'
                    root.manager.transition.direction = 'right'

            Button:
                text: 'To Optimization'
                font_name: 'fonts/Lcd.ttf'
                font_size: self.width/8
                text_size: self.size
                halign: 'center'
                valign: 'middle'
                color: '#80ffdb'
                on_release:
                    app.root.current = 'optimize'
                    root.manager.transition.direction = 'left'


<GoalFunction>:
    name: 'goal_function'
    id: goal_function
    BoxLayout:
        id: box
        size_hint_y: .9
        pos_hint: {"top": 1}
    GridLayout:
        rows: 1
        size_hint: (1, 0.1)
        Button:
            text: 'Main menu'
            font_name: 'fonts/Lcd.ttf'
            font_size: '40dp'
            color: '#80ffdb'
            halign: 'center'
            valign: 'middle'
            on_release:
                app.root.current = 'menu'
                root.manager.transition.direction = 'right'

        Button:
            text: 'See Schedule'
            text_size: self.size
            font_name: 'fonts/Lcd.ttf'
            font_size: self.width/8
            text_size: self.size
            color: '#80ffdb'
            halign: 'center'
            valign: 'middle'
            on_release:
                root.manager.get_screen('optimize').generate_initial_solution()
                root.manager.get_screen('see_schedule').generate_see_schedule_layout()
                root.manager.get_screen('see_schedule').update_schedule_description()
                app.root.current = 'see_schedule'
                root.manager.transition.direction = 'right'

        Button:
            text: 'To Optimization'
            font_name: 'fonts/Lcd.ttf'
            font_size: self.width/8
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            color: '#80ffdb'
            on_release:
                app.root.current = 'optimize'
                root.manager.transition.direction = 'left'

        Button:
            text: 'Reset solution'
            font_name: 'fonts/Lcd.ttf'
            font_size: self.width/8
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            color: '#ff1100'
            on_release:
                root.reset_solution()
                root.manager.get_screen('see_schedule').generate_see_schedule_layout()
                root.manager.get_screen('see_schedule').update_schedule_description()
                app.root.current = 'see_schedule'
                root.manager.transition.direction = 'left'


# liczba iteracji, koszt, koszt po algorytmie, koszt po improve i pauza jak nie będzie włączonego,
# liczba uczestników, liczba prowadzących
<SeeAlgorithmParameters>:
    name: 'see_algorithm_parameters'
    id: see_algorithm_parameters
    BoxLayout:
        orientation: 'vertical'
        GridLayout:
            cols: 1
            size_hint: (1, 0.9)

            GridLayout:
                cols: 5
                size_hint: (1, 0.4)
                spacing: 15

                BoxLayout:
                    orientation: "vertical"
                    spacing: 15
                    Label:
                        text: 'Initial cost:'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        id: first_cost
                        text: 'None'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                BoxLayout:
                    orientation: "vertical"
                    spacing: 15
                    Label:
                        text: ''
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        text: '-->'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                BoxLayout:
                    orientation: "vertical"
                    spacing: 15
                    Label:
                        text: 'Cost after optimization:'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        id: second_cost
                        text: 'None'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                BoxLayout:
                    orientation: "vertical"
                    spacing: 15
                    Label:
                        text: ''
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        text: '-->'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                BoxLayout:
                    orientation: "vertical"
                    spacing: 15
                    Label:
                        text: 'Cost after improvement:'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        id: third_cost
                        text: 'None'
                        font_size: self.width/6
                        text_size: self.size
                        halign: 'center'
                        valign: 'middle'

            GridLayout:
                cols: 1
                size_hint: (1, 0.6)
                spacing: 5
                BoxLayout:
                    orientation: "horizontal"
                    spacing: 15
                    Label:
                        text: 'Number of iterations:'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        id: num_of_iter
                        text: 'None'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                BoxLayout:
                    orientation: "horizontal"
                    spacing: 15
                    Label:
                        text: 'Clients number:'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        id: clients_num
                        text: 'None'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                BoxLayout:
                    orientation: "horizontal"
                    spacing: 15
                    Label:
                        text: 'Instructor number:'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        id: instructors_num
                        text: 'None'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                BoxLayout:
                    orientation: "horizontal"
                    spacing: 15
                    Label:
                        text: 'Time:'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'right'
                        valign: 'middle'

                    Label:
                        #size_hint: (0.3, 1)
                        id: alg_time
                        text: 'None'
                        font_size: self.width/16
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

        GridLayout:
            cols: 1
            size_hint: (1, 0.1)
            height: '100dp'
            Button:
                text: 'Go Back'
                font_name: 'fonts/Lcd.ttf'
                font_size: '40dp'
                color: '#80ffdb'
                on_release:
                    app.root.current = 'menu'
                    root.manager.transition.direction = 'right'

